/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain;


import com.ymm.back.domain.tables.Agenda;
import com.ymm.back.domain.tables.Comment;
import com.ymm.back.domain.tables.Databasechangelog;
import com.ymm.back.domain.tables.Databasechangeloglock;
import com.ymm.back.domain.tables.FileStorage;
import com.ymm.back.domain.tables.Hashtag;
import com.ymm.back.domain.tables.Message;
import com.ymm.back.domain.tables.Project;
import com.ymm.back.domain.tables.ProjectMember;
import com.ymm.back.domain.tables.User;
import com.ymm.back.domain.tables.Voting;
import com.ymm.back.domain.tables.Work;
import com.ymm.back.domain.tables.records.AgendaRecord;
import com.ymm.back.domain.tables.records.CommentRecord;
import com.ymm.back.domain.tables.records.DatabasechangelogRecord;
import com.ymm.back.domain.tables.records.DatabasechangeloglockRecord;
import com.ymm.back.domain.tables.records.FileStorageRecord;
import com.ymm.back.domain.tables.records.HashtagRecord;
import com.ymm.back.domain.tables.records.MessageRecord;
import com.ymm.back.domain.tables.records.ProjectMemberRecord;
import com.ymm.back.domain.tables.records.ProjectRecord;
import com.ymm.back.domain.tables.records.UserRecord;
import com.ymm.back.domain.tables.records.VotingRecord;
import com.ymm.back.domain.tables.records.WorkRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AgendaRecord, Integer> IDENTITY_AGENDA = Identities0.IDENTITY_AGENDA;
    public static final Identity<CommentRecord, Integer> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
    public static final Identity<DatabasechangelogRecord, Integer> IDENTITY_DATABASECHANGELOG = Identities0.IDENTITY_DATABASECHANGELOG;
    public static final Identity<DatabasechangeloglockRecord, Integer> IDENTITY_DATABASECHANGELOGLOCK = Identities0.IDENTITY_DATABASECHANGELOGLOCK;
    public static final Identity<FileStorageRecord, Integer> IDENTITY_FILE_STORAGE = Identities0.IDENTITY_FILE_STORAGE;
    public static final Identity<HashtagRecord, Integer> IDENTITY_HASHTAG = Identities0.IDENTITY_HASHTAG;
    public static final Identity<MessageRecord, Integer> IDENTITY_MESSAGE = Identities0.IDENTITY_MESSAGE;
    public static final Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Identities0.IDENTITY_PROJECT;
    public static final Identity<ProjectMemberRecord, Integer> IDENTITY_PROJECT_MEMBER = Identities0.IDENTITY_PROJECT_MEMBER;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<VotingRecord, Integer> IDENTITY_VOTING = Identities0.IDENTITY_VOTING;
    public static final Identity<WorkRecord, Integer> IDENTITY_WORK = Identities0.IDENTITY_WORK;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AgendaRecord> KEY_AGENDA_PRIMARY = UniqueKeys0.KEY_AGENDA_PRIMARY;
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = UniqueKeys0.KEY_COMMENT_PRIMARY;
    public static final UniqueKey<DatabasechangelogRecord> KEY_DATABASECHANGELOG_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOG_PRIMARY;
    public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
    public static final UniqueKey<FileStorageRecord> KEY_FILE_STORAGE_PRIMARY = UniqueKeys0.KEY_FILE_STORAGE_PRIMARY;
    public static final UniqueKey<HashtagRecord> KEY_HASHTAG_PRIMARY = UniqueKeys0.KEY_HASHTAG_PRIMARY;
    public static final UniqueKey<MessageRecord> KEY_MESSAGE_PRIMARY = UniqueKeys0.KEY_MESSAGE_PRIMARY;
    public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = UniqueKeys0.KEY_PROJECT_PRIMARY;
    public static final UniqueKey<ProjectMemberRecord> KEY_PROJECT_MEMBER_PRIMARY = UniqueKeys0.KEY_PROJECT_MEMBER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<VotingRecord> KEY_VOTING_PRIMARY = UniqueKeys0.KEY_VOTING_PRIMARY;
    public static final UniqueKey<WorkRecord> KEY_WORK_PRIMARY = UniqueKeys0.KEY_WORK_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AgendaRecord, ProjectMemberRecord> FK_AGENDA_MEMBER1 = ForeignKeys0.FK_AGENDA_MEMBER1;
    public static final ForeignKey<AgendaRecord, ProjectRecord> FK_AGENDA_PROJECT1 = ForeignKeys0.FK_AGENDA_PROJECT1;
    public static final ForeignKey<CommentRecord, ProjectMemberRecord> FK_COMMENT_MEMBER1 = ForeignKeys0.FK_COMMENT_MEMBER1;
    public static final ForeignKey<CommentRecord, WorkRecord> FK_COMMENT_WORK1 = ForeignKeys0.FK_COMMENT_WORK1;
    public static final ForeignKey<FileStorageRecord, MessageRecord> FK_FILE_STORAGE_MESSAGE1 = ForeignKeys0.FK_FILE_STORAGE_MESSAGE1;
    public static final ForeignKey<HashtagRecord, WorkRecord> FK_HASHTAG_WORK1 = ForeignKeys0.FK_HASHTAG_WORK1;
    public static final ForeignKey<MessageRecord, ProjectMemberRecord> FK_MESSAGE_MEMBER1 = ForeignKeys0.FK_MESSAGE_MEMBER1;
    public static final ForeignKey<MessageRecord, ProjectRecord> FK_MESSAGE_PROJECT1 = ForeignKeys0.FK_MESSAGE_PROJECT1;
    public static final ForeignKey<ProjectRecord, UserRecord> FK_PROJECT_USER = ForeignKeys0.FK_PROJECT_USER;
    public static final ForeignKey<ProjectMemberRecord, UserRecord> FK_MEMBER_USER1 = ForeignKeys0.FK_MEMBER_USER1;
    public static final ForeignKey<ProjectMemberRecord, ProjectRecord> FK_MEMBER_PROJECT1 = ForeignKeys0.FK_MEMBER_PROJECT1;
    public static final ForeignKey<VotingRecord, AgendaRecord> FK_VOTING_AGENDA1 = ForeignKeys0.FK_VOTING_AGENDA1;
    public static final ForeignKey<VotingRecord, ProjectMemberRecord> FK_VOTING_MEMBER1 = ForeignKeys0.FK_VOTING_MEMBER1;
    public static final ForeignKey<WorkRecord, ProjectRecord> FK_WORK_PROJECT1 = ForeignKeys0.FK_WORK_PROJECT1;
    public static final ForeignKey<WorkRecord, ProjectMemberRecord> FK_WORK_MEMBER1 = ForeignKeys0.FK_WORK_MEMBER1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AgendaRecord, Integer> IDENTITY_AGENDA = Internal.createIdentity(Agenda.AGENDA, Agenda.AGENDA.ID);
        public static Identity<CommentRecord, Integer> IDENTITY_COMMENT = Internal.createIdentity(Comment.COMMENT, Comment.COMMENT.ID);
        public static Identity<DatabasechangelogRecord, Integer> IDENTITY_DATABASECHANGELOG = Internal.createIdentity(Databasechangelog.DATABASECHANGELOG, Databasechangelog.DATABASECHANGELOG.ID);
        public static Identity<DatabasechangeloglockRecord, Integer> IDENTITY_DATABASECHANGELOGLOCK = Internal.createIdentity(Databasechangeloglock.DATABASECHANGELOGLOCK, Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static Identity<FileStorageRecord, Integer> IDENTITY_FILE_STORAGE = Internal.createIdentity(FileStorage.FILE_STORAGE, FileStorage.FILE_STORAGE.ID);
        public static Identity<HashtagRecord, Integer> IDENTITY_HASHTAG = Internal.createIdentity(Hashtag.HASHTAG, Hashtag.HASHTAG.ID);
        public static Identity<MessageRecord, Integer> IDENTITY_MESSAGE = Internal.createIdentity(Message.MESSAGE, Message.MESSAGE.ID);
        public static Identity<ProjectRecord, Integer> IDENTITY_PROJECT = Internal.createIdentity(Project.PROJECT, Project.PROJECT.ID);
        public static Identity<ProjectMemberRecord, Integer> IDENTITY_PROJECT_MEMBER = Internal.createIdentity(ProjectMember.PROJECT_MEMBER, ProjectMember.PROJECT_MEMBER.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
        public static Identity<VotingRecord, Integer> IDENTITY_VOTING = Internal.createIdentity(Voting.VOTING, Voting.VOTING.ID);
        public static Identity<WorkRecord, Integer> IDENTITY_WORK = Internal.createIdentity(Work.WORK, Work.WORK.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AgendaRecord> KEY_AGENDA_PRIMARY = Internal.createUniqueKey(Agenda.AGENDA, "KEY_agenda_PRIMARY", new TableField[] { Agenda.AGENDA.ID }, true);
        public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = Internal.createUniqueKey(Comment.COMMENT, "KEY_comment_PRIMARY", new TableField[] { Comment.COMMENT.ID }, true);
        public static final UniqueKey<DatabasechangelogRecord> KEY_DATABASECHANGELOG_PRIMARY = Internal.createUniqueKey(Databasechangelog.DATABASECHANGELOG, "KEY_databasechangelog_PRIMARY", new TableField[] { Databasechangelog.DATABASECHANGELOG.ID }, true);
        public static final UniqueKey<DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "KEY_databasechangeloglock_PRIMARY", new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
        public static final UniqueKey<FileStorageRecord> KEY_FILE_STORAGE_PRIMARY = Internal.createUniqueKey(FileStorage.FILE_STORAGE, "KEY_file_storage_PRIMARY", new TableField[] { FileStorage.FILE_STORAGE.ID }, true);
        public static final UniqueKey<HashtagRecord> KEY_HASHTAG_PRIMARY = Internal.createUniqueKey(Hashtag.HASHTAG, "KEY_hashtag_PRIMARY", new TableField[] { Hashtag.HASHTAG.ID }, true);
        public static final UniqueKey<MessageRecord> KEY_MESSAGE_PRIMARY = Internal.createUniqueKey(Message.MESSAGE, "KEY_message_PRIMARY", new TableField[] { Message.MESSAGE.ID }, true);
        public static final UniqueKey<ProjectRecord> KEY_PROJECT_PRIMARY = Internal.createUniqueKey(Project.PROJECT, "KEY_project_PRIMARY", new TableField[] { Project.PROJECT.ID }, true);
        public static final UniqueKey<ProjectMemberRecord> KEY_PROJECT_MEMBER_PRIMARY = Internal.createUniqueKey(ProjectMember.PROJECT_MEMBER, "KEY_project_member_PRIMARY", new TableField[] { ProjectMember.PROJECT_MEMBER.ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", new TableField[] { User.USER.ID }, true);
        public static final UniqueKey<VotingRecord> KEY_VOTING_PRIMARY = Internal.createUniqueKey(Voting.VOTING, "KEY_voting_PRIMARY", new TableField[] { Voting.VOTING.ID }, true);
        public static final UniqueKey<WorkRecord> KEY_WORK_PRIMARY = Internal.createUniqueKey(Work.WORK, "KEY_work_PRIMARY", new TableField[] { Work.WORK.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AgendaRecord, ProjectMemberRecord> FK_AGENDA_MEMBER1 = Internal.createForeignKey(Keys.KEY_PROJECT_MEMBER_PRIMARY, Agenda.AGENDA, "fk_agenda_member1", new TableField[] { Agenda.AGENDA.MEMBER_ID }, true);
        public static final ForeignKey<AgendaRecord, ProjectRecord> FK_AGENDA_PROJECT1 = Internal.createForeignKey(Keys.KEY_PROJECT_PRIMARY, Agenda.AGENDA, "fk_agenda_project1", new TableField[] { Agenda.AGENDA.PROJECT_ID }, true);
        public static final ForeignKey<CommentRecord, ProjectMemberRecord> FK_COMMENT_MEMBER1 = Internal.createForeignKey(Keys.KEY_PROJECT_MEMBER_PRIMARY, Comment.COMMENT, "fk_comment_member1", new TableField[] { Comment.COMMENT.MEMBER_ID }, true);
        public static final ForeignKey<CommentRecord, WorkRecord> FK_COMMENT_WORK1 = Internal.createForeignKey(Keys.KEY_WORK_PRIMARY, Comment.COMMENT, "fk_comment_work1", new TableField[] { Comment.COMMENT.WORK_ID }, true);
        public static final ForeignKey<FileStorageRecord, MessageRecord> FK_FILE_STORAGE_MESSAGE1 = Internal.createForeignKey(Keys.KEY_MESSAGE_PRIMARY, FileStorage.FILE_STORAGE, "fk_file_storage_message1", new TableField[] { FileStorage.FILE_STORAGE.MESSAGE_ID }, true);
        public static final ForeignKey<HashtagRecord, WorkRecord> FK_HASHTAG_WORK1 = Internal.createForeignKey(Keys.KEY_WORK_PRIMARY, Hashtag.HASHTAG, "fk_hashtag_work1", new TableField[] { Hashtag.HASHTAG.WORK_ID }, true);
        public static final ForeignKey<MessageRecord, ProjectMemberRecord> FK_MESSAGE_MEMBER1 = Internal.createForeignKey(Keys.KEY_PROJECT_MEMBER_PRIMARY, Message.MESSAGE, "fk_message_member1", new TableField[] { Message.MESSAGE.MEMBER_ID }, true);
        public static final ForeignKey<MessageRecord, ProjectRecord> FK_MESSAGE_PROJECT1 = Internal.createForeignKey(Keys.KEY_PROJECT_PRIMARY, Message.MESSAGE, "fk_message_project1", new TableField[] { Message.MESSAGE.PROJECT_ID }, true);
        public static final ForeignKey<ProjectRecord, UserRecord> FK_PROJECT_USER = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Project.PROJECT, "fk_project_user", new TableField[] { Project.PROJECT.USER_ID }, true);
        public static final ForeignKey<ProjectMemberRecord, UserRecord> FK_MEMBER_USER1 = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, ProjectMember.PROJECT_MEMBER, "fk_member_user1", new TableField[] { ProjectMember.PROJECT_MEMBER.USER_ID }, true);
        public static final ForeignKey<ProjectMemberRecord, ProjectRecord> FK_MEMBER_PROJECT1 = Internal.createForeignKey(Keys.KEY_PROJECT_PRIMARY, ProjectMember.PROJECT_MEMBER, "fk_member_project1", new TableField[] { ProjectMember.PROJECT_MEMBER.PROJECT_ID }, true);
        public static final ForeignKey<VotingRecord, AgendaRecord> FK_VOTING_AGENDA1 = Internal.createForeignKey(Keys.KEY_AGENDA_PRIMARY, Voting.VOTING, "fk_voting_agenda1", new TableField[] { Voting.VOTING.AGENDA_ID }, true);
        public static final ForeignKey<VotingRecord, ProjectMemberRecord> FK_VOTING_MEMBER1 = Internal.createForeignKey(Keys.KEY_PROJECT_MEMBER_PRIMARY, Voting.VOTING, "fk_voting_member1", new TableField[] { Voting.VOTING.MEMBER_ID }, true);
        public static final ForeignKey<WorkRecord, ProjectRecord> FK_WORK_PROJECT1 = Internal.createForeignKey(Keys.KEY_PROJECT_PRIMARY, Work.WORK, "fk_work_project1", new TableField[] { Work.WORK.PROJECT_ID }, true);
        public static final ForeignKey<WorkRecord, ProjectMemberRecord> FK_WORK_MEMBER1 = Internal.createForeignKey(Keys.KEY_PROJECT_MEMBER_PRIMARY, Work.WORK, "fk_work_member1", new TableField[] { Work.WORK.MEMBER_ID }, true);
    }
}

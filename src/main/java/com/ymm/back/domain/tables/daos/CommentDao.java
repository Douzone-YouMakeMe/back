/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.Comment;
import com.ymm.back.domain.tables.records.CommentRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentDao extends DAOImpl<CommentRecord, com.ymm.back.domain.tables.pojos.Comment, Integer> {

    /**
     * Create a new CommentDao without any configuration
     */
    public CommentDao() {
        super(Comment.COMMENT, com.ymm.back.domain.tables.pojos.Comment.class);
    }

    /**
     * Create a new CommentDao with an attached configuration
     */
    public CommentDao(Configuration configuration) {
        super(Comment.COMMENT, com.ymm.back.domain.tables.pojos.Comment.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.Comment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Comment.COMMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchById(Integer... values) {
        return fetch(Comment.COMMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.Comment fetchOneById(Integer value) {
        return fetchOne(Comment.COMMENT.ID, value);
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfMemberId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Comment.COMMENT.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchByMemberId(Integer... values) {
        return fetch(Comment.COMMENT.MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>work_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfWorkId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Comment.COMMENT.WORK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>work_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchByWorkId(Integer... values) {
        return fetch(Comment.COMMENT.WORK_ID, values);
    }

    /**
     * Fetch records that have <code>comments BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfComments(String lowerInclusive, String upperInclusive) {
        return fetchRange(Comment.COMMENT.COMMENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comments IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchByComments(String... values) {
        return fetch(Comment.COMMENT.COMMENTS, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Comment.COMMENT.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Comment> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Comment.COMMENT.UPDATE_TIME, values);
    }
}

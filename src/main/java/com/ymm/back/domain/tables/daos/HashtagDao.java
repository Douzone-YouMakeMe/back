/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.Hashtag;
import com.ymm.back.domain.tables.records.HashtagRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HashtagDao extends DAOImpl<HashtagRecord, com.ymm.back.domain.tables.pojos.Hashtag, Integer> {

    /**
     * Create a new HashtagDao without any configuration
     */
    public HashtagDao() {
        super(Hashtag.HASHTAG, com.ymm.back.domain.tables.pojos.Hashtag.class);
    }

    /**
     * Create a new HashtagDao with an attached configuration
     */
    public HashtagDao(Configuration configuration) {
        super(Hashtag.HASHTAG, com.ymm.back.domain.tables.pojos.Hashtag.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.Hashtag object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchById(Integer... values) {
        return fetch(Hashtag.HASHTAG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.Hashtag fetchOneById(Integer value) {
        return fetchOne(Hashtag.HASHTAG.ID, value);
    }

    /**
     * Fetch records that have <code>work_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchRangeOfWorkId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.WORK_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>work_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchByWorkId(Integer... values) {
        return fetch(Hashtag.HASHTAG.WORK_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchByName(String... values) {
        return fetch(Hashtag.HASHTAG.NAME, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Hashtag.HASHTAG.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Hashtag> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Hashtag.HASHTAG.UPDATE_TIME, values);
    }
}

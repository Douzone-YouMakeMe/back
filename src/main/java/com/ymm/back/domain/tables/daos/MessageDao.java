/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.Message;
import com.ymm.back.domain.tables.records.MessageRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageDao extends DAOImpl<MessageRecord, com.ymm.back.domain.tables.pojos.Message, Integer> {

    /**
     * Create a new MessageDao without any configuration
     */
    public MessageDao() {
        super(Message.MESSAGE, com.ymm.back.domain.tables.pojos.Message.class);
    }

    /**
     * Create a new MessageDao with an attached configuration
     */
    public MessageDao(Configuration configuration) {
        super(Message.MESSAGE, com.ymm.back.domain.tables.pojos.Message.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.Message object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Message.MESSAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchById(Integer... values) {
        return fetch(Message.MESSAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.Message fetchOneById(Integer value) {
        return fetchOne(Message.MESSAGE.ID, value);
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfMemberId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Message.MESSAGE.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByMemberId(Integer... values) {
        return fetch(Message.MESSAGE.MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>project_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfProjectId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Message.MESSAGE.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByProjectId(Integer... values) {
        return fetch(Message.MESSAGE.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>message BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfMessage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Message.MESSAGE.MESSAGE_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByMessage(String... values) {
        return fetch(Message.MESSAGE.MESSAGE_, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Message.MESSAGE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByType(String... values) {
        return fetch(Message.MESSAGE.TYPE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Message.MESSAGE.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Message.MESSAGE.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Message.MESSAGE.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Message> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Message.MESSAGE.UPDATE_TIME, values);
    }
}

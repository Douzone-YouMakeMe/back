/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.ProjectMember;
import com.ymm.back.domain.tables.records.ProjectMemberRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectMemberDao extends DAOImpl<ProjectMemberRecord, com.ymm.back.domain.tables.pojos.ProjectMember, Integer> {

    /**
     * Create a new ProjectMemberDao without any configuration
     */
    public ProjectMemberDao() {
        super(ProjectMember.PROJECT_MEMBER, com.ymm.back.domain.tables.pojos.ProjectMember.class);
    }

    /**
     * Create a new ProjectMemberDao with an attached configuration
     */
    public ProjectMemberDao(Configuration configuration) {
        super(ProjectMember.PROJECT_MEMBER, com.ymm.back.domain.tables.pojos.ProjectMember.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.ProjectMember object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchById(Integer... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.ProjectMember fetchOneById(Integer value) {
        return fetchOne(ProjectMember.PROJECT_MEMBER.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByUserId(Integer... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.USER_ID, values);
    }

    /**
     * Fetch records that have <code>project_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfProjectId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByProjectId(Integer... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByStatus(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.STATUS, values);
    }

    /**
     * Fetch records that have <code>applied_position BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfAppliedPosition(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.APPLIED_POSITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>applied_position IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByAppliedPosition(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.APPLIED_POSITION, values);
    }

    /**
     * Fetch records that have <code>comments BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfComments(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.COMMENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comments IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByComments(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.COMMENTS, values);
    }

    /**
     * Fetch records that have <code>portfolio_file BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfPortfolioFile(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.PORTFOLIO_FILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>portfolio_file IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByPortfolioFile(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.PORTFOLIO_FILE, values);
    }

    /**
     * Fetch records that have <code>portfolio_url BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfPortfolioUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.PORTFOLIO_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>portfolio_url IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByPortfolioUrl(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.PORTFOLIO_URL, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByDescription(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>auth BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfAuth(String lowerInclusive, String upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.AUTH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByAuth(String... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.AUTH, values);
    }

    /**
     * Fetch records that have <code>applied_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfAppliedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.APPLIED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>applied_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByAppliedTime(LocalDateTime... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.APPLIED_TIME, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByCreateTime(LocalDateTime... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ProjectMember.PROJECT_MEMBER.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.ProjectMember> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(ProjectMember.PROJECT_MEMBER.UPDATE_TIME, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.User;
import com.ymm.back.domain.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDao extends DAOImpl<UserRecord, com.ymm.back.domain.tables.pojos.User, Integer> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.ymm.back.domain.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, com.ymm.back.domain.tables.pojos.User.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchById(Integer... values) {
        return fetch(User.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.User fetchOneById(Integer value) {
        return fetchOne(User.USER.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByName(String... values) {
        return fetch(User.USER.NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>password BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfPassword(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByPassword(String... values) {
        return fetch(User.USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>tel BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfTel(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.TEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tel IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByTel(String... values) {
        return fetch(User.USER.TEL, values);
    }

    /**
     * Fetch records that have <code>profile BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfProfile(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PROFILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profile IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByProfile(String... values) {
        return fetch(User.USER.PROFILE, values);
    }

    /**
     * Fetch records that have <code>job_title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfJobTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.JOB_TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>job_title IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByJobTitle(String... values) {
        return fetch(User.USER.JOB_TITLE, values);
    }

    /**
     * Fetch records that have <code>ROLE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ROLE IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByRole(String... values) {
        return fetch(User.USER.ROLE, values);
    }

    /**
     * Fetch records that have <code>wstoken BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfWstoken(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.WSTOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wstoken IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByWstoken(String... values) {
        return fetch(User.USER.WSTOKEN, values);
    }

    /**
     * Fetch records that have <code>jwt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfJwt(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.JWT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>jwt IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByJwt(String... values) {
        return fetch(User.USER.JWT, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfRoleId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(User.USER.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByRoleId(Integer... values) {
        return fetch(User.USER.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>credentials_non_expired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfCredentialsNonExpired(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.CREDENTIALS_NON_EXPIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>credentials_non_expired IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByCredentialsNonExpired(Boolean... values) {
        return fetch(User.USER.CREDENTIALS_NON_EXPIRED, values);
    }

    /**
     * Fetch records that have <code>account_non_locked BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfAccountNonLocked(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.ACCOUNT_NON_LOCKED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_non_locked IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByAccountNonLocked(Boolean... values) {
        return fetch(User.USER.ACCOUNT_NON_LOCKED, values);
    }

    /**
     * Fetch records that have <code>enabled BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enabled IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByEnabled(Boolean... values) {
        return fetch(User.USER.ENABLED, values);
    }

    /**
     * Fetch records that have <code>account_non_expired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfAccountNonExpired(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.ACCOUNT_NON_EXPIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_non_expired IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByAccountNonExpired(Boolean... values) {
        return fetch(User.USER.ACCOUNT_NON_EXPIRED, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByCreateTime(LocalDateTime... values) {
        return fetch(User.USER.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.User> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(User.USER.UPDATE_TIME, values);
    }
}

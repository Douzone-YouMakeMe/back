/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.Voting;
import com.ymm.back.domain.tables.records.VotingRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VotingDao extends DAOImpl<VotingRecord, com.ymm.back.domain.tables.pojos.Voting, Integer> {

    /**
     * Create a new VotingDao without any configuration
     */
    public VotingDao() {
        super(Voting.VOTING, com.ymm.back.domain.tables.pojos.Voting.class);
    }

    /**
     * Create a new VotingDao with an attached configuration
     */
    public VotingDao(Configuration configuration) {
        super(Voting.VOTING, com.ymm.back.domain.tables.pojos.Voting.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.Voting object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Voting.VOTING.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchById(Integer... values) {
        return fetch(Voting.VOTING.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.Voting fetchOneById(Integer value) {
        return fetchOne(Voting.VOTING.ID, value);
    }

    /**
     * Fetch records that have <code>agenda_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfAgendaId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Voting.VOTING.AGENDA_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>agenda_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchByAgendaId(Integer... values) {
        return fetch(Voting.VOTING.AGENDA_ID, values);
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfMemberId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Voting.VOTING.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchByMemberId(Integer... values) {
        return fetch(Voting.VOTING.MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Voting.VOTING.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Voting.VOTING.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Voting.VOTING.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Voting.VOTING.UPDATE_TIME, values);
    }

    /**
     * Fetch records that have <code>choice BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchRangeOfChoice(String lowerInclusive, String upperInclusive) {
        return fetchRange(Voting.VOTING.CHOICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>choice IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Voting> fetchByChoice(String... values) {
        return fetch(Voting.VOTING.CHOICE, values);
    }
}

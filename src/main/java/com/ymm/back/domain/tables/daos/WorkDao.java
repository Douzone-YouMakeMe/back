/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.daos;


import com.ymm.back.domain.tables.Work;
import com.ymm.back.domain.tables.records.WorkRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkDao extends DAOImpl<WorkRecord, com.ymm.back.domain.tables.pojos.Work, Integer> {

    /**
     * Create a new WorkDao without any configuration
     */
    public WorkDao() {
        super(Work.WORK, com.ymm.back.domain.tables.pojos.Work.class);
    }

    /**
     * Create a new WorkDao with an attached configuration
     */
    public WorkDao(Configuration configuration) {
        super(Work.WORK, com.ymm.back.domain.tables.pojos.Work.class, configuration);
    }

    @Override
    public Integer getId(com.ymm.back.domain.tables.pojos.Work object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Work.WORK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchById(Integer... values) {
        return fetch(Work.WORK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ymm.back.domain.tables.pojos.Work fetchOneById(Integer value) {
        return fetchOne(Work.WORK.ID, value);
    }

    /**
     * Fetch records that have <code>project_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfProjectId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Work.WORK.PROJECT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>project_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByProjectId(Integer... values) {
        return fetch(Work.WORK.PROJECT_ID, values);
    }

    /**
     * Fetch records that have <code>member_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfMemberId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Work.WORK.MEMBER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member_id IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByMemberId(Integer... values) {
        return fetch(Work.WORK.MEMBER_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Work.WORK.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByName(String... values) {
        return fetch(Work.WORK.NAME, values);
    }

    /**
     * Fetch records that have <code>manager BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfManager(String lowerInclusive, String upperInclusive) {
        return fetchRange(Work.WORK.MANAGER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>manager IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByManager(String... values) {
        return fetch(Work.WORK.MANAGER, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfStatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Work.WORK.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByStatus(String... values) {
        return fetch(Work.WORK.STATUS, values);
    }

    /**
     * Fetch records that have <code>color BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfColor(String lowerInclusive, String upperInclusive) {
        return fetchRange(Work.WORK.COLOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>color IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByColor(String... values) {
        return fetch(Work.WORK.COLOR, values);
    }

    /**
     * Fetch records that have <code>started_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfStartedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Work.WORK.STARTED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>started_at IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByStartedAt(LocalDateTime... values) {
        return fetch(Work.WORK.STARTED_AT, values);
    }

    /**
     * Fetch records that have <code>finished_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfFinishedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Work.WORK.FINISHED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>finished_at IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByFinishedAt(LocalDateTime... values) {
        return fetch(Work.WORK.FINISHED_AT, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Work.WORK.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByCreateTime(LocalDateTime... values) {
        return fetch(Work.WORK.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchRangeOfUpdateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Work.WORK.UPDATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<com.ymm.back.domain.tables.pojos.Work> fetchByUpdateTime(LocalDateTime... values) {
        return fetch(Work.WORK.UPDATE_TIME, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.records;


import com.ymm.back.domain.tables.Databasechangeloglock;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatabasechangeloglockRecord extends UpdatableRecordImpl<DatabasechangeloglockRecord> implements Record3<LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = -1957160932;

    /**
     * Setter for <code>databasechangeloglock.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasechangeloglock.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>databasechangeloglock.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasechangeloglock.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>databasechangeloglock.id</code>.
     */
    public void setId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasechangeloglock.id</code>.
     */
    public Integer getId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return Databasechangeloglock.DATABASECHANGELOGLOCK.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Databasechangeloglock.DATABASECHANGELOGLOCK.UPDATE_TIME;
    }

    @Override
    public Field<Integer> field3() {
        return Databasechangeloglock.DATABASECHANGELOGLOCK.ID;
    }

    @Override
    public LocalDateTime component1() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component2() {
        return getUpdateTime();
    }

    @Override
    public Integer component3() {
        return getId();
    }

    @Override
    public LocalDateTime value1() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value2() {
        return getUpdateTime();
    }

    @Override
    public Integer value3() {
        return getId();
    }

    @Override
    public DatabasechangeloglockRecord value1(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public DatabasechangeloglockRecord value2(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public DatabasechangeloglockRecord value3(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DatabasechangeloglockRecord values(LocalDateTime value1, LocalDateTime value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatabasechangeloglockRecord
     */
    public DatabasechangeloglockRecord() {
        super(Databasechangeloglock.DATABASECHANGELOGLOCK);
    }

    /**
     * Create a detached, initialised DatabasechangeloglockRecord
     */
    public DatabasechangeloglockRecord(LocalDateTime createTime, LocalDateTime updateTime, Integer id) {
        super(Databasechangeloglock.DATABASECHANGELOGLOCK);

        set(0, createTime);
        set(1, updateTime);
        set(2, id);
    }
}

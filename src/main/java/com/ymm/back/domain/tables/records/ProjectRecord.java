/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.records;


import com.ymm.back.domain.tables.Project;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record13<Integer, Integer, String, String, Integer, String, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -376772948;

    /**
     * Setter for <code>project.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>project.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>project.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>project.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>project.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>project.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>project.contents</code>.
     */
    public void setContents(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>project.contents</code>.
     */
    public String getContents() {
        return (String) get(3);
    }

    /**
     * Setter for <code>project.view_count</code>.
     */
    public void setViewCount(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>project.view_count</code>.
     */
    public Integer getViewCount() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>project.thumbnail</code>.
     */
    public void setThumbnail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>project.thumbnail</code>.
     */
    public String getThumbnail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>project.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>project.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>project.authority</code>.
     */
    public void setAuthority(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>project.authority</code>.
     */
    public String getAuthority() {
        return (String) get(7);
    }

    /**
     * Setter for <code>project.total</code>.
     */
    public void setTotal(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>project.total</code>.
     */
    public Integer getTotal() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>project.started_time</code>.
     */
    public void setStartedTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>project.started_time</code>.
     */
    public LocalDateTime getStartedTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>project.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>project.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>project.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>project.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>project.finished_time</code>.
     */
    public void setFinishedTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>project.finished_time</code>.
     */
    public LocalDateTime getFinishedTime() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, String, String, Integer, String, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, String, String, Integer, String, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Project.PROJECT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Project.PROJECT.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Project.PROJECT.NAME;
    }

    @Override
    public Field<String> field4() {
        return Project.PROJECT.CONTENTS;
    }

    @Override
    public Field<Integer> field5() {
        return Project.PROJECT.VIEW_COUNT;
    }

    @Override
    public Field<String> field6() {
        return Project.PROJECT.THUMBNAIL;
    }

    @Override
    public Field<String> field7() {
        return Project.PROJECT.DESCRIPTION;
    }

    @Override
    public Field<String> field8() {
        return Project.PROJECT.AUTHORITY;
    }

    @Override
    public Field<Integer> field9() {
        return Project.PROJECT.TOTAL;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Project.PROJECT.STARTED_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Project.PROJECT.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Project.PROJECT.UPDATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return Project.PROJECT.FINISHED_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getContents();
    }

    @Override
    public Integer component5() {
        return getViewCount();
    }

    @Override
    public String component6() {
        return getThumbnail();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public String component8() {
        return getAuthority();
    }

    @Override
    public Integer component9() {
        return getTotal();
    }

    @Override
    public LocalDateTime component10() {
        return getStartedTime();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdateTime();
    }

    @Override
    public LocalDateTime component13() {
        return getFinishedTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getContents();
    }

    @Override
    public Integer value5() {
        return getViewCount();
    }

    @Override
    public String value6() {
        return getThumbnail();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public String value8() {
        return getAuthority();
    }

    @Override
    public Integer value9() {
        return getTotal();
    }

    @Override
    public LocalDateTime value10() {
        return getStartedTime();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdateTime();
    }

    @Override
    public LocalDateTime value13() {
        return getFinishedTime();
    }

    @Override
    public ProjectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public ProjectRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public ProjectRecord value4(String value) {
        setContents(value);
        return this;
    }

    @Override
    public ProjectRecord value5(Integer value) {
        setViewCount(value);
        return this;
    }

    @Override
    public ProjectRecord value6(String value) {
        setThumbnail(value);
        return this;
    }

    @Override
    public ProjectRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProjectRecord value8(String value) {
        setAuthority(value);
        return this;
    }

    @Override
    public ProjectRecord value9(Integer value) {
        setTotal(value);
        return this;
    }

    @Override
    public ProjectRecord value10(LocalDateTime value) {
        setStartedTime(value);
        return this;
    }

    @Override
    public ProjectRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public ProjectRecord value12(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public ProjectRecord value13(LocalDateTime value) {
        setFinishedTime(value);
        return this;
    }

    @Override
    public ProjectRecord values(Integer value1, Integer value2, String value3, String value4, Integer value5, String value6, String value7, String value8, Integer value9, LocalDateTime value10, LocalDateTime value11, LocalDateTime value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(Integer id, Integer userId, String name, String contents, Integer viewCount, String thumbnail, String description, String authority, Integer total, LocalDateTime startedTime, LocalDateTime createTime, LocalDateTime updateTime, LocalDateTime finishedTime) {
        super(Project.PROJECT);

        set(0, id);
        set(1, userId);
        set(2, name);
        set(3, contents);
        set(4, viewCount);
        set(5, thumbnail);
        set(6, description);
        set(7, authority);
        set(8, total);
        set(9, startedTime);
        set(10, createTime);
        set(11, updateTime);
        set(12, finishedTime);
    }
}

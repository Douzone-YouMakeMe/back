/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.domain.tables.records;


import com.ymm.back.domain.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record17<Integer, String, String, String, String, String, String, String, String, String, Integer, Boolean, Boolean, Boolean, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1741259804;

    /**
     * Setter for <code>user.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>user.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.password</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>user.password</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.tel</code>.
     */
    public void setTel(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>user.tel</code>.
     */
    public String getTel() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user.profile</code>.
     */
    public void setProfile(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>user.profile</code>.
     */
    public String getProfile() {
        return (String) get(5);
    }

    /**
     * Setter for <code>user.job_title</code>.
     */
    public void setJobTitle(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>user.job_title</code>.
     */
    public String getJobTitle() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user.ROLE</code>.
     */
    public void setRole(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>user.ROLE</code>.
     */
    public String getRole() {
        return (String) get(7);
    }

    /**
     * Setter for <code>user.wstoken</code>.
     */
    public void setWstoken(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>user.wstoken</code>.
     */
    public String getWstoken() {
        return (String) get(8);
    }

    /**
     * Setter for <code>user.jwt</code>.
     */
    public void setJwt(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>user.jwt</code>.
     */
    public String getJwt() {
        return (String) get(9);
    }

    /**
     * Setter for <code>user.role_id</code>.
     */
    public void setRoleId(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>user.role_id</code>.
     */
    public Integer getRoleId() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>user.credentials_non_expired</code>.
     */
    public void setCredentialsNonExpired(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>user.credentials_non_expired</code>.
     */
    public Boolean getCredentialsNonExpired() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>user.account_non_locked</code>.
     */
    public void setAccountNonLocked(Boolean value) {
        set(12, value);
    }

    /**
     * Getter for <code>user.account_non_locked</code>.
     */
    public Boolean getAccountNonLocked() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>user.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>user.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>user.account_non_expired</code>.
     */
    public void setAccountNonExpired(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>user.account_non_expired</code>.
     */
    public Boolean getAccountNonExpired() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>user.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>user.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>user.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>user.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Integer, String, String, String, String, String, String, String, String, String, Integer, Boolean, Boolean, Boolean, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Integer, String, String, String, String, String, String, String, String, String, Integer, Boolean, Boolean, Boolean, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return User.USER.TEL;
    }

    @Override
    public Field<String> field6() {
        return User.USER.PROFILE;
    }

    @Override
    public Field<String> field7() {
        return User.USER.JOB_TITLE;
    }

    @Override
    public Field<String> field8() {
        return User.USER.ROLE;
    }

    @Override
    public Field<String> field9() {
        return User.USER.WSTOKEN;
    }

    @Override
    public Field<String> field10() {
        return User.USER.JWT;
    }

    @Override
    public Field<Integer> field11() {
        return User.USER.ROLE_ID;
    }

    @Override
    public Field<Boolean> field12() {
        return User.USER.CREDENTIALS_NON_EXPIRED;
    }

    @Override
    public Field<Boolean> field13() {
        return User.USER.ACCOUNT_NON_LOCKED;
    }

    @Override
    public Field<Boolean> field14() {
        return User.USER.ENABLED;
    }

    @Override
    public Field<Boolean> field15() {
        return User.USER.ACCOUNT_NON_EXPIRED;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return User.USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return User.USER.UPDATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getTel();
    }

    @Override
    public String component6() {
        return getProfile();
    }

    @Override
    public String component7() {
        return getJobTitle();
    }

    @Override
    public String component8() {
        return getRole();
    }

    @Override
    public String component9() {
        return getWstoken();
    }

    @Override
    public String component10() {
        return getJwt();
    }

    @Override
    public Integer component11() {
        return getRoleId();
    }

    @Override
    public Boolean component12() {
        return getCredentialsNonExpired();
    }

    @Override
    public Boolean component13() {
        return getAccountNonLocked();
    }

    @Override
    public Boolean component14() {
        return getEnabled();
    }

    @Override
    public Boolean component15() {
        return getAccountNonExpired();
    }

    @Override
    public LocalDateTime component16() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component17() {
        return getUpdateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getTel();
    }

    @Override
    public String value6() {
        return getProfile();
    }

    @Override
    public String value7() {
        return getJobTitle();
    }

    @Override
    public String value8() {
        return getRole();
    }

    @Override
    public String value9() {
        return getWstoken();
    }

    @Override
    public String value10() {
        return getJwt();
    }

    @Override
    public Integer value11() {
        return getRoleId();
    }

    @Override
    public Boolean value12() {
        return getCredentialsNonExpired();
    }

    @Override
    public Boolean value13() {
        return getAccountNonLocked();
    }

    @Override
    public Boolean value14() {
        return getEnabled();
    }

    @Override
    public Boolean value15() {
        return getAccountNonExpired();
    }

    @Override
    public LocalDateTime value16() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value17() {
        return getUpdateTime();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setTel(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setProfile(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setJobTitle(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UserRecord value9(String value) {
        setWstoken(value);
        return this;
    }

    @Override
    public UserRecord value10(String value) {
        setJwt(value);
        return this;
    }

    @Override
    public UserRecord value11(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UserRecord value12(Boolean value) {
        setCredentialsNonExpired(value);
        return this;
    }

    @Override
    public UserRecord value13(Boolean value) {
        setAccountNonLocked(value);
        return this;
    }

    @Override
    public UserRecord value14(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UserRecord value15(Boolean value) {
        setAccountNonExpired(value);
        return this;
    }

    @Override
    public UserRecord value16(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserRecord value17(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, Integer value11, Boolean value12, Boolean value13, Boolean value14, Boolean value15, LocalDateTime value16, LocalDateTime value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String name, String email, String password, String tel, String profile, String jobTitle, String role, String wstoken, String jwt, Integer roleId, Boolean credentialsNonExpired, Boolean accountNonLocked, Boolean enabled, Boolean accountNonExpired, LocalDateTime createTime, LocalDateTime updateTime) {
        super(User.USER);

        set(0, id);
        set(1, name);
        set(2, email);
        set(3, password);
        set(4, tel);
        set(5, profile);
        set(6, jobTitle);
        set(7, role);
        set(8, wstoken);
        set(9, jwt);
        set(10, roleId);
        set(11, credentialsNonExpired);
        set(12, accountNonLocked);
        set(13, enabled);
        set(14, accountNonExpired);
        set(15, createTime);
        set(16, updateTime);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.ymm.back.pojos;


import com.fasterxml.jackson.annotation.JsonFormat;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectP implements Serializable {

    private static final long serialVersionUID = 301081396;

    private Integer       id;
    private Integer       userId;
    private String        name;

    private String        contents;
    private Integer       viewCount;
    private String        thumbnail;
    private String        description;
    private String        authority;
    private Integer       total;
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime startedTime;
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime createTime;
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime updateTime;
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
    private LocalDateTime finishedTime;

    public ProjectP() {}

    public ProjectP(ProjectP value) {
        this.id = value.id;
        this.userId = value.userId;
        this.name = value.name;
        this.startedTime = value.startedTime;
        this.contents = value.contents;
        this.viewCount = value.viewCount;
        this.thumbnail = value.thumbnail;
        this.description = value.description;
        this.authority = value.authority;
        this.total = value.total;
        this.createTime = value.createTime;
        this.updateTime = value.updateTime;
        this.finishedTime = value.finishedTime;
    }

    public ProjectP(
        Integer       id,
        Integer       userId,
        String        name,
        LocalDateTime startedTime,
        String        contents,
        Integer       viewCount,
        String        thumbnail,
        String        description,
        String        authority,
        Integer       total,
        LocalDateTime createTime,
        LocalDateTime updateTime,
        LocalDateTime finishedTime
    ) {
        this.id = id;
        this.userId = userId;
        this.name = name;
        this.startedTime = startedTime;
        this.contents = contents;
        this.viewCount = viewCount;
        this.thumbnail = thumbnail;
        this.description = description;
        this.authority = authority;
        this.total = total;
        this.createTime = createTime;
        this.updateTime = updateTime;
        this.finishedTime = finishedTime;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public LocalDateTime getStartedTime() {
        return this.startedTime;
    }

    public void setStartedTime(LocalDateTime startedTime) {
        this.startedTime = startedTime;
    }

    public String getContents() {
        return this.contents;
    }

    public void setContents(String contents) {
        this.contents = contents;
    }

    public Integer getViewCount() {
        return this.viewCount;
    }

    public void setViewCount(Integer viewCount) {
        this.viewCount = viewCount;
    }

    public String getThumbnail() {
        return this.thumbnail;
    }

    public void setThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getAuthority() {
        return this.authority;
    }

    public void setAuthority(String authority) {
        this.authority = authority;
    }

    public Integer getTotal() {
        return this.total;
    }

    public void setTotal(Integer total) {
        this.total = total;
    }

    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    public LocalDateTime getUpdateTime() {
        return this.updateTime;
    }

    public void setUpdateTime(LocalDateTime updateTime) {
        this.updateTime = updateTime;
    }

    public LocalDateTime getFinishedTime() {
        return this.finishedTime;
    }

    public void setFinishedTime(LocalDateTime finishedTime) {
        this.finishedTime = finishedTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProjectP other = (ProjectP) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (startedTime == null) {
            if (other.startedTime != null)
                return false;
        }
        else if (!startedTime.equals(other.startedTime))
            return false;
        if (contents == null) {
            if (other.contents != null)
                return false;
        }
        else if (!contents.equals(other.contents))
            return false;
        if (viewCount == null) {
            if (other.viewCount != null)
                return false;
        }
        else if (!viewCount.equals(other.viewCount))
            return false;
        if (thumbnail == null) {
            if (other.thumbnail != null)
                return false;
        }
        else if (!thumbnail.equals(other.thumbnail))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (authority == null) {
            if (other.authority != null)
                return false;
        }
        else if (!authority.equals(other.authority))
            return false;
        if (total == null) {
            if (other.total != null)
                return false;
        }
        else if (!total.equals(other.total))
            return false;
        if (createTime == null) {
            if (other.createTime != null)
                return false;
        }
        else if (!createTime.equals(other.createTime))
            return false;
        if (updateTime == null) {
            if (other.updateTime != null)
                return false;
        }
        else if (!updateTime.equals(other.updateTime))
            return false;
        if (finishedTime == null) {
            if (other.finishedTime != null)
                return false;
        }
        else if (!finishedTime.equals(other.finishedTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.startedTime == null) ? 0 : this.startedTime.hashCode());
        result = prime * result + ((this.contents == null) ? 0 : this.contents.hashCode());
        result = prime * result + ((this.viewCount == null) ? 0 : this.viewCount.hashCode());
        result = prime * result + ((this.thumbnail == null) ? 0 : this.thumbnail.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.authority == null) ? 0 : this.authority.hashCode());
        result = prime * result + ((this.total == null) ? 0 : this.total.hashCode());
        result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
        result = prime * result + ((this.updateTime == null) ? 0 : this.updateTime.hashCode());
        result = prime * result + ((this.finishedTime == null) ? 0 : this.finishedTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Project (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(name);
        sb.append(", ").append(startedTime);
        sb.append(", ").append(contents);
        sb.append(", ").append(viewCount);
        sb.append(", ").append(thumbnail);
        sb.append(", ").append(description);
        sb.append(", ").append(authority);
        sb.append(", ").append(total);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateTime);
        sb.append(", ").append(finishedTime);

        sb.append(")");
        return sb.toString();
    }
}
